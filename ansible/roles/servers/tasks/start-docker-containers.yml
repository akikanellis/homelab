---
- name: Set apps
  ansible.builtin.set_fact:
    apps: >
      {{
      lookup(
      "community.general.filetree",
      "templates/{{ ansible_hostname }}/docker/apps"
      )
      | selectattr("state", "equalto", "directory")
      | rejectattr("path", "contains", "/")
      | map(attribute="path")
      }}

- name: Create docker directories
  ansible.builtin.file:
    path: /{{ item }}
    state: directory
    owner: "{{ ansible_username }}"
    group: "{{ ansible_group }}"
    mode: 0700
  loop:
    - docker
    - docker/apps

- name: Create directories per stack
  ansible.builtin.file:
    path: /docker/apps/{{ item.0 }}/{{ item.1 }}
    state: directory
    owner: "{{ ansible_username }}"
    group: "{{ ansible_group }}"
    mode: 0700
  loop: "{{ apps | product(directories) }}"
  vars:
    directories:
      - ""
      - "volumes"

- name: Copy docker-compose template per stack
  ansible.builtin.template:
    src: "{{ ansible_hostname }}/docker/apps/{{ item }}/docker-compose.yml.j2"
    dest: /docker/apps/{{ item }}/docker-compose.yml
    owner: "{{ ansible_username }}"
    group: "{{ ansible_group }}"
    mode: 0600
  loop: "{{ apps }}"
  vars:
    volumes_directory: /docker/apps/{{ item }}/volumes

- name: Create stack
  command:
    chdir: /docker/apps/{{ item }}
    cmd: docker compose up --detach --remove-orphans
  loop: "{{ apps }}"
  register: docker_compose_result
  changed_when: >
    'Started' in docker_compose_result.stderr or
    'Stopped' in docker_compose_result.stderr
