#!/usr/bin/env just --justfile

export PY_COLORS := "1"
export ANSIBLE_FORCE_COLOR := "1"

@_default:
  just --list

# Install dependencies
install-dependencies:
  #!/usr/bin/env bash
  python -m venv env
  source env/bin/activate
  pip install --requirement requirements.txt
  ansible-galaxy install --role-file requirements.yml

# Run tests
test *extra_args:
  #!/usr/bin/env bash
  source env/bin/activate
  molecule test {{extra_args}}

# Create hosts locally
up *extra_args:
  #!/usr/bin/env bash
  source env/bin/activate
  molecule create {{extra_args}}

# Create and configure hosts locally
run *extra_args:
  #!/usr/bin/env bash
  source env/bin/activate
  molecule converge {{extra_args}}

# Create and configure hosts locally for `test` tags
run-test *extra_args:
  #!/usr/bin/env bash
  source env/bin/activate
  molecule converge {{extra_args}} -- --tags test -vv

# Create and configure hosts locally with debug logs
run-debug *extra_args:
  #!/usr/bin/env bash
  source env/bin/activate
  molecule --debug converge {{extra_args}} -- -vvv

# Create and configure hosts locally for `test` tags with debug logs
run-test-debug *extra_args:
  #!/usr/bin/env bash
  source env/bin/activate
  molecule converge {{extra_args}} -- --tags test -vvv

# Log in to a locally created host
login host:
  #!/usr/bin/env bash
  source env/bin/activate
  molecule login --host {{host}}

# Remove locally created hosts
down *extra_args:
  #!/usr/bin/env bash
  source env/bin/activate
  molecule destroy {{extra_args}}

# Edit dev vault
edit-dev-vault:
  #!/usr/bin/env bash
  source env/bin/activate
  ansible-vault edit inventories/dev/group_vars/all/vault.yml

# Edit prod vault
edit-prod-vault:
  #!/usr/bin/env bash
  source env/bin/activate
  ansible-vault edit inventories/prod/group_vars/all/vault.yml

# Clean generated files
clean:
  #!/usr/bin/env bash
  source env/bin/activate
  molecule destroy
  rm --recursive --force env galaxy
